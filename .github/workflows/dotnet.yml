name: .NET

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  aiproj-demo:
    runs-on: windows-2022
    name: Build Visual Studio Project (aiproj)
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Setup NuGet
        uses: NuGet/setup-nuget@v2

      - name: Restore NuGet packages
        run: nuget restore -verbosity detailed

      - name: Deploy Advinst
        uses: caphyon/advinst-github-action@main
        with:
          advinst-version: '22.4'
          # advinst-license: ${{ secrets.ADVINST_LICENSE_KEY }}

      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1.1

      - name: Build app for release
        run: msbuild ${{ github.workspace }}\Fenix.sln -p:Configuration=Release

      - name: Upload installer artifacts
        uses: actions/upload-artifact@v4
        with:
            name: Fenix-Modbus-Installer
            path: D:\a\Fenix-Modbus\Fenix-Modbus\FenixSetup-SetupFiles\FenixSetup.msi

      - name: ShowFiles
        run: dir \Fenix-Modbus\Fenix-Modbus\

# jobs:
#   build:

#     runs-on: windows-2022

#     steps:
#     - uses: actions/checkout@v4

#     - name: Setup NuGet
#       uses: NuGet/setup-nuget@v1

#     - name: Cache NuGet packages
#       uses: actions/cache@v3
#       with:
#         path: ~/.nuget/packages
#         key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
#         restore-keys: |
#           ${{ runner.os }}-nuget-

#     - name: Restore NuGet packages
#       run: nuget restore -verbosity detailed

#     - name: Setup MSBuild
#       uses: microsoft/setup-msbuild@v1.0.2

#     - name: Install Advanced Installer
#       run: choco install advanced-installer --version=18.6

#     - name: Build with MSBuild
#       run: msbuild Fenix.sln /p:Configuration=Release

    # - name: Build Advanced Installer project
    #   uses: caphyon/advinst-github-action@v2.0
    #   with:
    #     aip-build-name: FenixSetup
    #     aip-path: FenixSetup/FenixSetup.aip
    #     aip-output-dir: FenixSetup-SetupFiles

    # - name: Set up .NET Framework 4.8 Developer Pack
    #   run: choco install netfx-4.8-devpack

    # - name: Install Visual Studio 2022 Build Tools
    #   run: choco install visualstudio2022buildtools --package-parameters "--add Microsoft.VisualStudio.Workload.ManagedDesktopBuildTools --includeRecommended --includeOptional"

    # Without not going -> workaround
    # - name: Disable Out of Proc Build
    #   run: |
    #    & "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\IDE\CommonExtensions\Microsoft\VSI\DisableOutOfProcBuild\DisableOutOfProcBuild.exe"

    # - name: Build Visual Studio Installer project
    #   run: |
    #     $devenvPath="C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\IDE\devenv.com"
    #     &"$devenvPath" "FenixInstall\FenixInstall.vdproj" /Build "Release|Any CPU"

    # - name: Upload installer artifacts
    #   uses: actions/upload-artifact@v4
    #   with:
    #     name: Fenix-Modbus-Installer
    #     path: D:\a\Fenix-Modbus\Fenix-Modbus\FenixInstall\bin\Release\

    # - name: Upload installer artifacts
    #   uses: actions/upload-artifact@v4
    #   with:
    #     name: Fenix-Modbus-Installer
    #     path: D:\a\Fenix-Modbus\Fenix-Modbus\FenixSetup-SetupFiles\FenixSetup.msi
